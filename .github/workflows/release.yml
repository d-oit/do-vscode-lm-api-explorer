name: Release

on:
  push:
    branches:
      - main

# The concurrency group ensures that only one release runs at a time.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    # Set permissions for the GITHUB_TOKEN for writing contents and creating releases.
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          # Fetch all history for all tags and branches to allow changeset versioning
          fetch-depth: 0
          # We need a token with write permissions to push the version bump
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Process Changesets and Bump Version
        id: changesets
        run: npm run changeset:ci-release
        env:
          # The GITHUB_TOKEN is required for the script to interact with the repo if needed
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # This new step extracts the release notes from the CHANGELOG.md file.
      - name: Extract Changelog Entry
        id: changelog
        if: steps.changesets.outputs.has_changesets == 'true'
        run: |
          # This awk script extracts the content for the latest version from CHANGELOG.md.
          # It starts capturing lines after finding the new version's header (e.g., ## [1.2.3])
          # and stops when it hits the next version header or the end of the file.
          awk '/^## \['"${{ steps.changesets.outputs.new_version }}"'\]/{f=1;next} /^## \[/{f=0} f' CHANGELOG.md > release_notes.md
          
          # Set the multiline content as a GitHub Actions output
          echo 'body<<EOF' >> $GITHUB_OUTPUT
          cat release_notes.md >> $GITHUB_OUTPUT
          echo 'EOF' >> $GITHUB_OUTPUT

      - name: Commit and Push Version Bump
        if: steps.changesets.outputs.has_changesets == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add .
          git commit -m "chore: release v${{ steps.changesets.outputs.new_version }}"
          git push

      - name: Create GitHub Release
        if: steps.changesets.outputs.has_changesets == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release create "v${{ steps.changesets.outputs.new_version }}" \
            --title "Release v${{ steps.changesets.outputs.new_version }}" \
            --notes "${{ steps.changelog.outputs.body }}"
