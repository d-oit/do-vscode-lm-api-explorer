name: Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write
  packages: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm test

    - name: Build
      run: npm run build

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Bump version and create tag
      id: version
      run: |
        # Get current version
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "Current version: $CURRENT_VERSION"
        
        # Bump patch version
        npm version patch --no-git-tag-version
        
        # Get new version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "New version: $NEW_VERSION"
        
        # Create and push tag
        git add package.json package-lock.json
        git commit -m "chore: bump version to $NEW_VERSION"
        git tag "v$NEW_VERSION"
        git push origin main
        git push origin "v$NEW_VERSION"
        
        # Set output
        echo "new_tag=v$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT

    - name: Create Release
      run: |
        gh release create ${{ steps.version.outputs.new_tag }} \
          --title "Release ${{ steps.version.outputs.new_tag }}" \
          --generate-notes
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Package extension
      run: |
        npx vsce package

    - name: Upload VSIX to release
      run: |
        gh release upload ${{ steps.version.outputs.new_tag }} *.vsix
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
